//
// User Interface Elements.
//

// Buttons.
@mixin btn {
  text-decoration: none;
  border: 0;
  border-radius: $alpha-radius;
  position: relative;
  display: block;
  width: 100%;
  text-align: center;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family: $alpha-font-family;
  font-weight: $beta-font-weight;
  cursor: pointer;
  transition: .11s ease-in-out;
  transition-property: background, color, border;
  outline: none;

  // Disable OS-specific button styling on IE.
  -webkit-appearance: none; // sass-lint:disable-line no-vendor-prefixes

  &:hover {
    text-decoration: none;
  }
}

%btn {
  @include btn;
}

// Button sizes.
@mixin btn-l {
  @include px-padding-lr(2, 2);
  @include text-dimensions(0, 1, 0, .6, .8);

  @include mq($bp-tablet-l) {
    @include text-dimensions(0, 1, 0, .7, .8);
  }
}

@mixin btn-m {
  @include px-padding-lr(1.5, 1.5);
  @include text-dimensions(-1, 1, 0, .3, .4);

  @include mq($bp-tablet-l) {
    @include text-dimensions(-1, 1, 0, .4, .4);
  }
}

@mixin btn-s {
  @include em-padding-lr(.5, .5);
  @include text-dimensions(-2, 1, 0, .1, .2);

  @include mq($bp-tablet-l) {
    @include text-dimensions(-2, 1, 0, .15, .2);
  }
}

// Button display.
@mixin btn-inlineblock {
  display: inline-block;
  width: auto;
}

// Button color.
// use: @mixin btn-color(color1[,color2]);
@mixin btn-color($c1: $alpha-ui-color, $c2: lighten($c1, $depth)) {
  @include text-color($c1);
  border: $border solid $c1;
  background-color: $c1;

  @if $depth > 0 {
    background-image: linear-gradient($c1, $c2);
  }

  @if $highlight {
    box-shadow: inset 0 1px 0 rgba($white-color, $highlight / 100%); // sass-lint:disable-line no-color-literals
  }

  &:hover,
  &:focus {
    @include text-color(lighten($c1, 100 - $contrast));
    border: $border solid lighten($c1, 100 - $contrast);
    background-color: lighten($c1, 100 - $contrast);

    @if $depth > 0 {
      background-image: linear-gradient(lighten($c1, 100 - $contrast), lighten($c2, 100 - $contrast));
    }
  }

  &:focus {
    text-decoration: underline;
  }

  &:active {
    @include text-color(lighten($c1, 100 - $contrast));
    box-shadow: none;
    background-color: lighten($c1, 100 - $contrast);

    @if $depth > 0 {
      background-image: linear-gradient(lighten($c2, 100 - $contrast), lighten($c1, 100 - $contrast));
    }
  }
}

// Inputs.
@mixin baseline-dimensions-form($msi: 0, $pt: 0, $pb: 0, $l: $alpha-leading) {
  @include baseline-dimensions($msi, $pt, $pb, $l);

  @if $msi == 0 {
    $line-height: ((ceil($alpha-font-size / $alpha-baseline-grid) * $alpha-baseline-grid) + ($alpha-baseline-grid * $l)) / $alpha-font-size;
    $padding-top: $alpha-baseline-grid / $alpha-font-size * $pt * 1em;
    $padding-bottom: $alpha-baseline-grid / $alpha-font-size * $pb * 1em;
    $border-width: em(su($border));
    height: $line-height + $padding-top + $padding-bottom;
  }

  @if $msi != 0 {
    $line-height: ((ceil(ms($msi) / $alpha-baseline-grid) * $alpha-baseline-grid) + ($alpha-baseline-grid * $l)) / (ms($msi));
    $padding-top: $alpha-baseline-grid * $pt / ms($msi) * 1em;
    $padding-bottom: $alpha-baseline-grid * $pb / ms($msi) * 1em;
    height: $line-height + $padding-top + $padding-bottom;
  }
}

@mixin input-l {
  @include em-padding-lr(.25);
  @include baseline-dimensions-form(1, 2, 2, 0);
}

@mixin input-m {
  @include em-padding-lr(.5);
  @include input-dimensions(-1, 1, 0, 1, 1);
}

@mixin input-s {
  @include em-padding-lr(.25);
  @include baseline-dimensions-form(0, 1, 1, 0);
}

// Pre- & postfix mixins.
@mixin postfix {
  border-left: 0;
}

@mixin prefix {
  border-right: 0;
}

// Alerts.
@mixin alert-base {
  border-width: $border;
  border-style: solid;
  margin-bottom: #{$alpha-line-height}em;
  position: relative;
  padding: em($alpha-baseline-grid * 2) em($alpha-baseline-grid * 3);

  a:hover,
  a:active,
  a:focus {
    text-decoration: none;
  }

  .close {
    position: absolute;
    top: #{$alpha-line-height / 2}em;
    right: #{$alpha-line-height / 2}em;
    display: block;
    line-height: 1;
    text-decoration: none;
  }

  h2 {
    padding-top: 0;
  }

  p {
    @include baseline-dimensions(0, 1, 1);
  }

  ul {
    margin-top: 0;
    margin-bottom: 0;
  }
}

%alert {
  @include alert-base;
}

@mixin alert {
  @include alert-base;
  @include text-color($gamma-ui-color);

  cursor: pointer;
  border-color: darken($gamma-ui-color, 20%);
  background-color: $gamma-ui-color;

  a {
    @include text-color($gamma-ui-color);
    text-decoration: underline;
  }
}

@mixin alert-error {
  @include alert-base;
  @include text-color(lighten($error-color, 30));

  border-color: darken($error-color, 10);
  background-color: lighten($error-color, 30);

  a {
    @include text-color(lighten($error-color, 30));
  }
}

@mixin alert-success {
  @include alert-base;
  @include text-color(lighten($success-color, 40));

  border-color: darken($success-color, 10);
  background-color: lighten($success-color, 40);

  a {
    @include text-color(lighten($success-color, 40));
  }
}

@mixin alert-notice {
  @include alert-base;
  @include text-color(lighten($notice-color, 30));

  border-color: darken($notice-color, 10);
  background-color: lighten($notice-color, 30);

  a {
    @include text-color(lighten($notice-color, 30));
  }
}

// Pagination mixin.
@mixin pagination {
  @include clearfix;
  @include horizontal-nav;
  width: 100%;
  overflow: hidden;

  a,
  span {
    display: block;
    float: left;
  }

}

%pagination {
  @include pagination;
}

@mixin pagination-centered {
  @include pagination;

  .inner {
    float: left;
    position: relative;
    left: 50%;
  }

  ul {
    overflow: hidden;
    position: relative;
    left: -50%;
  }
}

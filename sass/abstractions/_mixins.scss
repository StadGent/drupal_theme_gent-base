//
// Patterns
//
// sass-lint:disable no-vendor-prefixes

// Clearfix.
// @extend %clearfix;
@mixin clearfix {
  &::before,
  &::after {
    display: table;
    content: '';
  }

  &::after {
    clear: both;
  }
}

@mixin rounded {
  border-radius: $alpha-radius;
}

@mixin rounded-1 {
  border-radius: $beta-radius;
}

@mixin rounded-2 {
  border-radius: $gamma-radius;
}

@mixin rounded-3 {
  border-radius: $delta-radius;
}

%rounded {
  @include rounded;
}

%rounded-1 {
  @include rounded-1;
}

%rounded-2 {
  @include rounded-2;
}

%rounded-3 {
  @include rounded-3;
}

// Horizontal responsive navigation.
// @include list-nav on <ul> or <ol>;
// @include horizontal-nav on <ul> or <ol>;
@mixin reset-list {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
}

%reset-list {
  @include reset-list;
}

@mixin list-nav {
  list-style: none;
  margin-left: 0;
  padding: 0;
}

@mixin horizontal-nav {
  li,
  a {
    display: block;
    float: left;
    zoom: 1;
  }
}

// Calculate text-color based on background-color.
@mixin text-color($c1) {
  // Calculations based on https://vimeo.com/60224584
  @if (.2126 * red($c1) + .7152 * green($c1) + .0722 * blue($c1)) / 255 <= .5 {
    color: #fff;
  }
  @else {
    color: #000;
  }
}

// Prevent Long URL's From Breaking Out of Container.
// http://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container
%word-break {
  // sass-lint:disable-block no-duplicate-properties
  word-break: break-all;
  // Non standard for webkit
  word-break: break-word;

  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

// UI mixins.
@mixin block($color, $top: 1.5, $right: 1, $bottom: 1.5, $left: 1) {
  background-color: $color;
  padding: #{$alpha-line-height * 1em * $top} #{$grid-margin * $right * 1px} #{$alpha-line-height * 1em * $bottom} #{$grid-margin * $left * 1px};
}

// Cross browser background opacity.
@mixin background-opacity($color, $alpha) {
  // sass-lint:disable-block no-duplicate-properties
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: $color;
  background-color: $rgba;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str}, endColorstr=#{$ie-hex-str});
  zoom: 1;
}

// Overlay mixin
@mixin overlay($opacity) {
  @include background-opacity(hsl(hue($beta-ui-color), $saturation, 20), $opacity);
}

%overlay {
  @include overlay(.7);
}

// Baseline mixins

// Vertical padding based on the base line-height
// @include padding-tb(#top, #bottom);
@mixin padding-tb($pt: 1, $pb: 0) {
  // sass-lint:disable-block no-duplicate-properties
  @if $pt > 0 {
    // padding-top: #{($baseline-unit / $alpha-font-size) * $pt}em;
    padding-top: $pt * $alpha-font-size * 1px;
    padding-top: $pt * 1rem;
  }

  @if $pb > 0 {
    // padding-bottom: #{($baseline-unit / $alpha-font-size) * $pb}em;
    padding-bottom: $pb * $alpha-font-size * 1px;
    padding-bottom: $pb * 1rem;
  }
}

// Padding-bottom based on the base line-height
// @include padding-bottom(#bottom),
@mixin padding-bottom($pb: 1) {
  // sass-lint:disable-block no-duplicate-properties
  padding-bottom: $pb * $alpha-font-size * 1px;
  padding-bottom: $pb * 1rem;
}

// Padding-top based on the base line-height
// @include padding-top(#top);
@mixin padding-top($pt: 1) {
  // sass-lint:disable-block no-duplicate-properties
  // padding-top: $alpha-baseline-grid/$alpha-font-size*$pt*1em;
  // padding-top: #{($baseline-unit / $alpha-font-size) * $pt}em;
  padding-top: $pt * $alpha-font-size * 1px;
  padding-top: $pt * 1rem;
}

// Vertical margin based on the base line-height
// @include margin-tb(#top, #bottom)
@mixin margin-tb($mt: 1, $mb: 0) {
  // sass-lint:disable-block no-duplicate-properties
  @if $mt > 0 {
    // margin-top: #{($baseline-unit / $alpha-font-size) * $mt}em;
    margin-top: $mt * $alpha-font-size * 1px;
    margin-top: $mt * 1rem;
  }

  @if $mb > 0 {
    // margin-bottom: #{($baseline-unit / $alpha-font-size) * $mb}em;
    margin-bottom: $mb * $alpha-font-size * 1px;
    margin-bottom: $mb * 1rem;
  }
}

// Margin-bottom based on the base line-height
// @include margin-bottom(#bottom);

@mixin margin-bottom($mb: 1) {
  // sass-lint:disable-block no-duplicate-properties
  // margin-bottom: $alpha-baseline-grid/$alpha-font-size*$mb*1em;
  // margin-bottom: #{($baseline-unit / $alpha-font-size) * $mb}em;
  margin-bottom: $mb * $alpha-font-size * 1px;
  margin-bottom: $mb * 1rem;
}

@mixin margin-top($mt: 1) {
  // sass-lint:disable-block no-duplicate-properties
  // margin-top: $alpha-baseline-grid/$alpha-font-size*$mt*1em;
  // margin-top: #{($baseline-unit / $alpha-font-size) * $mt}em;
  margin-top: $mt * $alpha-font-size * 1px;
  margin-top: $mt * 1rem;
}



// Border-box polyfill helper.
// @include border-box;
@mixin border-box {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin border-content {
  -webkit-box-sizing: border-content;
  -moz-box-sizing: border-content;
  box-sizing: border-content;
}

// Progressive svg backgrounds with png fallback.
// Requires modernizr class .svg.
// @include svg-bg('path/file', '.extension', $delta-ui-color, 0 50%, no-repeat);
@mixin mdrn-svg {
  .svg & {
    @content;
  }
}

@mixin svg-bg($filename, $extension: '.png', $bg-color: transparent, $position: 0 0, $repeat: no-repeat, $size: auto) {
  // Intended use of mixin after properties.
  // sass-lint:disable-block mixins-before-declarations
  background: $bg-color url('#{$filename}#{$extension}') $position $repeat;
  background-size: $size;

  @include mdrn-svg {
    background: $bg-color url('#{$filename}.svg') $position $repeat;
    background-size: $size;
  }
}

// Media query mixin.
// @include mq(#point, #query1, #query2);
@mixin mq($point, $query1: min, $query2: width) {
  @media screen and (#{$query1}-#{$query2}: ($point - (if($query1 == max, .01, 0)))) {
    @content;
  }
}

// Media query mixin.
// @include mq(#startpoint, #endpoint, #query);
@mixin mqb($startpoint, $endpoint, $query: width) {
  @media (min-#{$query}: $startpoint) and (max-#{$query}: ($endpoint - .01)) {
    @content;
  }
}

// Hide text: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
@mixin hide-text {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

%hide-text {
  @include hide-text;
}

// Input element placeholder mixin.
// @include placeholder {
//   font-style:italic;
//   color: white;
//   font-weight:100;
// }
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

@mixin btn--alpha {
  color: $white-color;
  background-color: $alpha-link-color;

  &:hover {
    background-color: lighten($alpha-link-color, 5);
  }

  &:focus,
  &:active {
    background-color: $alpha-link-color;
  }
}

@mixin btn--beta {
  color: #fff;
  background-color: $beta-ui-color;

  &:hover {
    color: $white-color;
    background-color: lighten($beta-ui-color, 5);
  }

  &:focus,
  &:active {
    background-color: darken($beta-ui-color, 2.5);
  }
}

@mixin btn--beta--alt {
  color: $beta-ui-color;
  background-color: lighten($beta-ui-color, 50);
  box-shadow: 0 -1px 0 0 darken($beta-ui-color, 5) inset;

  &:hover {
    background-color: $white-color;
  }

  &:focus,
  &:active {
    color: $beta-ui-color;
    background-color: lighten($beta-ui-color, 50);
    box-shadow: 0 1px 0 0 darken($beta-ui-color, 5) inset;
  }
}

@mixin btn--gamma {
  font-weight: $alpha-font-weight;
  color: $alpha-ui-color;
  border: 1px solid transparent;

  &:hover,
  &:focus,
  &:active {
    color: $alpha-ui-color;
    background-color: $gamma-ui-color;
    border: 1px solid darken($gamma-ui-color, 10);
  }
}

@mixin btn--epsilon {
  color: $white-color;
  background-color: $delta-ui-color;

  &:hover {
    color: $white-color;
    background-color: darken($delta-ui-color, 3);
  }

  &:focus,
  &:active {
    color: $white-color;
    background-color: darken($delta-ui-color, 3);
  }
}

@mixin btn--zeta {
  @include margin-tb(.8, 0);
  color: $beta-ui-color;
  background-color: $white-color;
  width: 10%;

  &:hover {
    color: $beta-ui-color;
    background-color: $white-color;
  }

  &:focus,
  &:active {
    color: $beta-ui-color;
    background-color: $white-color;
  }
}

@mixin btn--disabled {
  color: $disabled-color;
  background-color: $disabled-ui-color;
  border: 1px solid $disabled-color;
  cursor: default;

  &:hover {
    background-color: $disabled-ui-color;
  }

  &:focus,
  &:active {
    background-color: $disabled-ui-color;
  }
}

@mixin padding-top--big {
  @include padding-tb(1, 0);

  @include mq($bp-tablet-s) {
    @include padding-tb(1.5, 0);
  }
}

@mixin padding-bottom--big {
  @include padding-tb(0, 1);

  @include mq($bp-tablet-s) {
    @include padding-tb(0, 1.5);
  }
}

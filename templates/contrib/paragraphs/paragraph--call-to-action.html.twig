{#
/**
 * @file
 * CTA paragraph implementation..
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% extends "paragraph.html.twig" %}

{% set primary_type = paragraph.field_primary_action_type.value %}

{% set custom_classes = [
  'cta-block',
  'image-none',
  primary_type == 'document' ? 'download' : 'link'
] %}

{% block paragraph %}
  <section {{ attributes.addClass(classes).addClass(custom_classes) }}>
    <div class="cta-block__content">
      <div class="feature-block secondary">
        {% block content %}
          {{ content.title|typography({
            'set_min_length_hyphenation': 15,
            'set_hyphenation_language': typography_lang
          }) }}
          {{ content|without(
            'title',
            'field_primary_action',
            'field_primary_action_size',
            'field_secondary_action',
            'field_secondary_action_size'
          ) }}
        {% endblock %}

        {% block actions %}
          {% if content.field_secondary_action is not defined %}
            {{ content.field_primary_action }}
            {{ content.field_primary_action_size }}
          {% else %}
            <ul class="links">
              <li>
                {{ content.field_primary_action }}
                {{ content.field_primary_action_size }}
              </li>
              <li>
                {{ content.field_secondary_action }}
                {{ content.field_secondary_action_size }}
              </li>
            </ul>
          {% endif %}
        {% endblock %}
      </div>
    </div>
  </section>
{% endblock %}

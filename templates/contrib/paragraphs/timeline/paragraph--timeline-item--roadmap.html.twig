{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set classes = [
    'timeline-slot',
] %}

{% set note_type = 'important' %}
{% set note_icon = 'icon-exclamation-circle' %}
{% set note_text = 'Important info'|t %}

{% if content.field_important_note|render == 'payment' %}
    {% set note_type = 'payment' %}
    {% set note_icon = 'icon-euro' %}
    {% set note_text = 'Payment info'|t %}
{% elseif content.field_important_note|render == 'timebound' %}
    {% set note_type = 'timebound' %}
    {% set note_icon = 'icon-clock' %}
    {% set note_text = 'Time-bound info'|t %}
{% elseif content.field_important_note|render == 'unmissable' %}
    {% set note_type = 'unmissable' %}
    {% set note_icon = 'icon-exclamation-circle' %}
    {% set note_text = 'Not to be missed info'|t %}
{% endif %}

<div{{ attributes.addClass(classes) }} role="listitem">
    <div class="item">
    <dd class="item__image">
        <div class="timeline-slot-content timeline-slot-content__img">
            {% if content.field_image|render is not empty %}
                <div class="image-gallery--wrapper single">
                    {{ content.field_image }}
                </div>
            {% endif %}
        </div>
    </dd>
    <dd class="item__content">
        <div class="timeline-slot-header">
            <h3 class="timeline-slot-title">
                {{ content.title }}
            </h3>
            <h4 class="timeline-slot-date">{{ content.subtitle }}</h4>
        </div>
        <div class="timeline-slot-content">
            <div class="content-text">
                <p class="important-note note--{{ note_type }}">
                    <i class="{{ note_icon }}" aria-hidden="true"></i>
                    <span>{{ note_text }}</span>
                </p>

                {{ content.field_text }}

                <p class="important-note note--{{ note_type }}">
                    <i class="{{ note_icon }}" aria-hidden="true"></i>
                    <span>{{ note_text }}</span>
                </p>
            </div>

            <div class="content-btn">
                <button type="button" class="button button-primary icon-arrow-right ">
                    CTA button
                </button>
            </div>

            {% if content.field_paragraphs|render is not empty %}
            <div class="accordion--link dropdown--link">
                <button aria-controls="accordion--link--single--content--{{ paragraph.id() }}" type="button" class="accordion--button accordion--link--button" aria-expanded="false" >
                    {{ 'More info'|t }}
                    <i class="icon-chevron-down" aria-hidden="true"></i>
                </button>
                <div id="accordion--link--single--content--{{ paragraph.id() }}" class="accordion--link--content" aria-hidden="true" hidden="hidden">
                    {{ content.field_paragraphs }}
                </div>
            </div>
            {% endif %}
        </div>
    </dd>
</div>
</div>

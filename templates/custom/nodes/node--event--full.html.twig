{#
/**
* @file
* Theme override to display a node.
*
* Available variables:
* - node: The node entity with limited access to object properties and methods.
*   Only method names starting with "get", "has", or "is" and a few common
*   methods such as "id", "label", and "bundle" are available. For example:
*   - node.getCreatedTime() will return the node creation timestamp.
*   - node.hasField('field_example') returns TRUE if the node bundle includes
*     field_example. (This does not indicate the presence of a value in this
*     field.)
*   - node.isPublished() will return whether the node is published or not.
*   Calling other methods, such as node.delete(), will result in an exception.
*   See \Drupal\node\Entity\Node for a full list of public properties and
*   methods for the node object.
* - label: The title of the node.
* - content: All node items. Use {{ content }} to print them all,
*   or print a subset such as {{ content.field_example }}. Use
*   {{ content|without('field_example') }} to temporarily suppress the printing
*   of a given child element.
* - author_picture: The node author user entity, rendered using the "compact"
*   view mode.
* - metadata: Metadata for this node.
* - date: Themed creation date field.
* - author_name: Themed author name field.
* - url: Direct URL of the current node.
* - display_submitted: Whether submission information should be displayed.
* - attributes: HTML attributes for the containing element.
*   The attributes.class element may contain one or more of the following
*   classes:
*   - node: The current template type (also known as a "theming hook").
*   - node--type-[type]: The current node type. For example, if the node is an
*     "Article" it would result in "node--type-article". Note that the machine
*     name will often be in a short form of the human readable label.
*   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
*     teaser would result in: "node--view-mode-teaser", and
*     full: "node--view-mode-full".
*   The following are controlled through the node publishing options.
*   - node--promoted: Appears on nodes promoted to the front page.
*   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
*     teaser listings.
*   - node--unpublished: Appears on unpublished nodes visible only to site
*     admins.
* - title_attributes: Same as attributes, except applied to the main title
*   tag that appears in the template.
* - content_attributes: Same as attributes, except applied to the main
*   content tag that appears in the template.
* - author_attributes: Same as attributes, except applied to the author of
*   the node tag that appears in the template.
* - title_prefix: Additional output populated by modules, intended to be
*   displayed in front of the main title tag that appears in the template.
* - title_suffix: Additional output populated by modules, intended to be
*   displayed after the main title tag that appears in the template.
* - view_mode: View mode; for example, "teaser" or "full".
* - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
* - page: Flag for the full page state. Will be true if view_mode is 'full'.
* - readmore: Flag for more state. Will be true if the teaser content of the
*   node cannot hold the main body content.
* - logged_in: Flag for authenticated user status. Will be true when the
*   current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
*   is an administrator.
*
* @see template_preprocess_node()
*
* @todo Remove the id attribute (or make it a class), because if that gets
*   rendered twice on a page this is invalid CSS for example: two lists
*   in different view modes.
*/
#}

{%
  set classes = [
    'node--type-' ~ node.bundle|clean_class
  ]
%}

{{ attach_library('classy/node') }}

<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
    <h1{{ title_attributes }}>
      {{ label }}
    </h1>
  {{ title_suffix }}

  {{ content.field_summary }}

  <aside class="info-box">
    <img src="{{ base_path }}themes/contrib/gent_base/styleguide/build/styleguide/img/svg/whistle-light.svg" alt="" class="info-box-icon">
    <div class="info-box-content">
      <h2>Extra information about this event</h2>

      <ul class="icon-list">
        {% if content.field_event_date|render|striptags|trim is not empty or content.field_event_date_textual|render|striptags|trim is not empty %}
          <li>
            <i class="icon-calendar" aria-hidden="true"></i>
            <span>
              {{ content.field_event_date }}
              {{ content.field_event_date_textual }}
            </span>
          </li>
        {% endif %}
        {% if content.field_event_location|render|striptags|trim is not empty %}
          <li>
            <i class="icon-marker" aria-hidden="true"></i>
            <span>
              {{ content.field_event_location }}
            </span>
          </li>
        {% endif %}
      </ul>

      {{ content.field_event_subscription_link }}
    </div>
  </aside>

  {{ content.field_paragraphs }}

</article>

<aside>

  {% if content.field_documents|render|striptags|trim is not empty %}
    <div class="document-box accordion">
      <h2>{{ 'Documents'|t }}</h2>
      {{ content.field_documents }}
    </div>
  {% endif %}

  <div class="related-box">
    <img src="{{ base_path }}themes/contrib/gent_base/styleguide/build/styleguide/img/svg/lightbulb.svg" alt="" class="related-box-image" />
    <div class="related-box-content">
      <h2>{{ 'Also interesting'|t }}</h2>

      {% if content.field_related|render|striptags|trim is not empty %}
        <div class="related-box-content-column">
          <h3>{{ 'Similar articles'|t }}</h3>
          {{ content.field_related }}
        </div>
      {% endif %}

      <div class="related-box-content-column">
        {% if content.field_tags|render|striptags|trim is not empty %}
          <h3>{{ 'More info about'|t }}</h3>
          {{ content.field_tags }}
        {% endif %}

        <h3>{{ 'Related Linked Open Data'|t }}</h3>
        <p>{{ 'Stub' }}</p>
      </div>
    </div>
  </div>

  {% if content.field_related_news_events|render|striptags|trim is not empty %}
    <div class="extra-articles">
      <div class="extra-articles-content">
        <h2>{{ 'More news and events'|t }}</h1>
        {{ content.field_related_news_events }}
      </div>
    </div>
  {% endif %}

  <p class="info-page--edit-date">{{ dateChanged }}</p>
</aside>

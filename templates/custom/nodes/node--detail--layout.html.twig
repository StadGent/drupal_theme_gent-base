{#
/**
* @file
* Theme override to display a node.
*
* Available variables:
* - node: The node entity with limited access to object properties and methods.
*   Only method names starting with "get", "has", or "is" and a few common
*   methods such as "id", "label", and "bundle" are available. For example:
*   - node.getCreatedTime() will return the node creation timestamp.
*   - node.hasField('field_example') returns TRUE if the node bundle includes
*     field_example. (This does not indicate the presence of a value in this
*     field.)
*   - node.isPublished() will return whether the node is published or not.
*   Calling other methods, such as node.delete(), will result in an exception.
*   See \Drupal\node\Entity\Node for a full list of public properties and
*   methods for the node object.
* - label: The title of the node.
* - content: All node items. Use {{ content }} to print them all,
*   or print a subset such as {{ content.field_example }}. Use
*   {{ content|without('field_example') }} to temporarily suppress the printing
*   of a given child element.
* - author_picture: The node author user entity, rendered using the "compact"
*   view mode.
* - metadata: Metadata for this node.
* - date: Themed creation date field.
* - author_name: Themed author name field.
* - url: Direct URL of the current node.
* - display_submitted: Whether submission information should be displayed.
* - attributes: HTML attributes for the containing element.
*   The attributes.class element may contain one or more of the following
*   classes:
*   - node: The current template type (also known as a "theming hook").
*   - node--type-[type]: The current node type. For example, if the node is an
*     "Article" it would result in "node--type-article". Note that the machine
*     name will often be in a short form of the human readable label.
*   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
*     teaser would result in: "node--view-mode-teaser", and
*     full: "node--view-mode-full".
*   The following are controlled through the node publishing options.
*   - node--promoted: Appears on nodes promoted to the front page.
*   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
*     teaser listings.
*   - node--unpublished: Appears on unpublished nodes visible only to site
*     admins.
* - title_attributes: Same as attributes, except applied to the main title
*   tag that appears in the template.
* - content_attributes: Same as attributes, except applied to the main
*   content tag that appears in the template.
* - author_attributes: Same as attributes, except applied to the author of
*   the node tag that appears in the template.
* - title_prefix: Additional output populated by modules, intended to be
*   displayed in front of the main title tag that appears in the template.
* - title_suffix: Additional output populated by modules, intended to be
*   displayed after the main title tag that appears in the template.
* - view_mode: View mode; for example, "teaser" or "full".
* - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
* - page: Flag for the full page state. Will be true if view_mode is 'full'.
* - readmore: Flag for more state. Will be true if the teaser content of the
*   node cannot hold the main body content.
* - logged_in: Flag for authenticated user status. Will be true when the
*   current user is a logged-in member.
* - is_admin: Flag for admin user status. Will be true when the current user
*   is an administrator.
*
* @see template_preprocess_node()
*
* @todo Remove the id attribute (or make it a class), because if that gets
*   rendered twice on a page this is invalid CSS for example: two lists
*   in different view modes.
*/
#}

{% set classes = [
  'node--type-' ~ node.bundle|clean_class,
  not node.isPublished() ? 'node--unpublished'
] %}

{{ attach_library('classy/node') }}

<article{{ attributes.addClass(classes) }}>
  {% block article_content_top %}
    <div class="{{ header_classes|join(' ') }} overlap">
      <div class="left">
        {{ readspeaker }}

        {{ title_prefix }}
        <h1{{ title_attributes }}>
          {{ label }}
        </h1>
        {{ title_suffix }}

        {% block article_time %}
        {% endblock %}

        {% block article_summary %}
          {{ content.field_summary }}
        {% endblock %}
      </div>

      {% if content.field_header_image[0] is not empty %}
        <div class="right">
          {{ content.field_header_image }}
        </div>
      {% endif %}
    </div>
  {% endblock %}

  {% block article_content_summary %}
  {% endblock %}

  {% block article_content_bottom %}
    {{ content.field_paragraphs }}
  {% endblock %}
</article>

<aside class="top">
  {% block article_aside_top %}
    {% if content.field_contact_categories|render|striptags|trim is not empty or content.field_contacts|render|striptags|trim is not empty or content.field_responsible_person|render|striptags|trim is not empty or content.field_geotag|render is not empty %}
      <div class="contact-box">
        <h2>{{ 'Additional information'|t }}</h2>
        {% if content.field_contacts|render|striptags|trim is not empty or content.field_contact_categories|render|striptags|trim is not empty %}
          <div class="contact-box-column">
            <h3>{{ 'Contacts'|t }}</h3>
            <ul class="main-contacts">
              {% if content.field_contact_categories|render|striptags|trim is not empty %}
                {{ content.field_contact_categories }}
              {% endif %}
              {% if content.field_contacts|render|striptags|trim is not empty %}
                {{ content.field_contacts }}
              {% endif %}
            </ul>
          </div>
        {% endif %}
        {% if content.field_responsible_person|render|striptags|trim is not empty or content.field_geotag|render is not empty %}
          <div class="contact-box-column">
            {% if content.field_geotag|render is not empty %}
              <h3>{{ 'Location'|t }}</h3>
              <p>{{ content.field_geotag }}</p>
            {% endif %}
            {% if content.field_responsible_person|render|striptags|trim is not empty %}
              <h3>{{ 'Authorized persons'|t }}</h3>
              {{ content.field_responsible_person }}
            {% endif %}
          </div>
        {% endif %}
      </div>
    {% endif %}

    {% if content.field_documents|render|striptags|trim is not empty %}
      <div class="documents">
        <h2>{{ 'Documents'|t }}</h2>
        {{ content.field_documents }}
      </div>
    {% endif %}

    {% if content.field_related|render|striptags|trim is not empty or content.field_tags|render|striptags|trim is not empty or content.field_opendata_link|render|striptags|trim is not empty %}
      <div class="related-box">
        <div class="related-box-content">
          <h2>{{ 'Also interesting'|t }}</h2>

          {% if content.field_related|render|striptags|trim is not empty %}
            <div class="related-box-content-column">
              <h3>{{ 'Similar articles'|t }}</h3>
              {{ content.field_related }}
            </div>
          {% endif %}

          <div class="related-box-content-column">
            {% if content.field_tags|render|striptags|trim is not empty %}
              <h3>{{ 'More info about'|t }}</h3>
              {{ content.field_tags }}
            {% endif %}

            {{ content.field_opendata_link }}
          </div>
        </div>
      </div>
    {% endif %}

    {% if content.field_related_news_events|render|striptags|trim is not empty %}
      <div class="">
        <div class="extra-articles-content">
          <h2>{{ 'More news and events'|t }}</h2>
          {{ content.field_related_news_events }}
        </div>
      </div>
    {% endif %}
  {% endblock %}
</aside>

<aside class="bottom">
  {% block article_aside_bottom %}
    {{ content.feedback_form }}
  {% endblock %}
</aside>
